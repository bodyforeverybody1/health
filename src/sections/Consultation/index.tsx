import { Container } from "../../styled.root.ts";
import {
  Section,
  Grid,
  Content,
  StyledWrapperForm,
  StyledTitle,
  StyledContacts,
  StyledHeaderForm,
} from "./styled.ts";
import { ContactType, getDate, initContact } from "../../helper";
import { token } from "../../consts";
import { ChangeEvent, useState } from "react";
import { useNavigate } from "react-router-dom";
import { Span } from "../../components/Modal/styled.ts";
import Photo from "../../../public/photo-second.png";

const Consultation = () => {
  const navigate = useNavigate();

  const [values, setValues] = useState({
    name: "",
    phone: "",
  });

  const [contacts, setContacts] = useState<ContactType>(initContact);
  const sendOrder = async (e: any) => {
    e.preventDefault();

    try {
      const obj = {
        // chat_id: "518174528", // home
        chat_id: "-4545168563", // work
        text: `
üìÜ ${getDate()}
–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è 15-–º–∏–Ω—É—Ç–Ω–∞—è
–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è
üë®‚Äçü¶∞–ò–º—è: ${values.name}
üíª–ú–µ—Å—Å–µ–Ω–¥–∂–µ—Ä: 
${contacts.WatsApp ? "WatsApp" : ""}
${contacts.Telegram ? "Telegram" : ""}
üìû–¢–µ–ª–µ—Ñ–æ–Ω: ${values.phone}

`,
      };
      await fetch(`https://api.telegram.org/bot${token}/sendMessage`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(obj),
      });
      setContacts(initContact);
      navigate("/thanks");
    } catch (err) {
      console.error(err);
    }
  };

  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {
    const { name, value } = e.target;
    setValues({ ...values, [name]: value });
  };

  const handleClick = (value: string) => {
    setContacts((prevState) => ({
      ...prevState,
      [value]: !contacts[value],
    }));
  };

  return (
    <Section>
      <Container>
        <Grid>
          <div style={{ display: "flex", flexDirection: "column", gap: "3vw" }}>
            <Content>
              <h2>–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è 15-–º–∏–Ω—É—Ç–Ω–∞—è</h2>
              <h2>–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Å —Ç—Ä–µ–Ω–µ—Ä–æ–º</h2>
            </Content>
            <img className="mobile" src={Photo} alt="image" />
            <StyledWrapperForm>
              <StyledHeaderForm>
                <StyledTitle>–ì–¥–µ —Å –≤–∞–º–∏ —É–¥–æ–±–Ω–µ–µ —Å–≤—è–∑–∞—Ç—å—Å—è</StyledTitle>
                <StyledContacts>
                  <Span
                    $active={contacts["WatsApp"]}
                    onClick={() => handleClick("WatsApp")}
                  >
                    WhatsApp
                  </Span>{" "}
                  <Span
                    $active={contacts["Telegram"]}
                    onClick={() => handleClick("Telegram")}
                  >
                    Telegram
                  </Span>
                </StyledContacts>
              </StyledHeaderForm>

              <form onSubmit={sendOrder}>
                <input
                  required
                  placeholder="–í–∞—à–µ –∏–º—è"
                  name="name"
                  value={values.name}
                  onChange={handleChange}
                />
                <input
                  required
                  placeholder="–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–Ω–∞—á–∏–Ω–∞—è —Å +)"
                  name="phone"
                  value={values.phone}
                  onChange={handleChange}
                />
                <button type="submit">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
              </form>
            </StyledWrapperForm>
          </div>
          <div>
            <img src={Photo} alt="image" />
          </div>
        </Grid>
      </Container>
    </Section>
  );
};

export default Consultation;
