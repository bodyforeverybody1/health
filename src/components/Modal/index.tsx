import { useModal } from "../../hooks/useModal.ts";
import {
  ModalStyles,
  ModalContentStyles,
  CloseBtn,
  FieldSet,
} from "./styled.ts";
import { useState } from "react";
import { getDate } from "../../helper";
import { useNavigate } from "react-router-dom";
import { token } from "../../consts";

const Modal = () => {
  const [user, setUser] = useState<string>();
  const [typeMessage, setTypeMessage] = useState<string>();
  const [phone, setPhone] = useState<string>();
  const [isPolitic, setIsPolitic] = useState<boolean>();
  const [isAge, setIsAge] = useState<boolean>();
  const [textArea, setTextArea] = useState<string>();
  const [isShowSuggestion, _] = useState(false);
  const [loading, setLoading] = useState(false);

  const { closeModal, isOpen, type } = useModal();
  const navigate = useNavigate();

  const sendOrder = async (e: any) => {
    e.preventDefault();

    try {
      const obj = {
        // chat_id: "518174528", // home
        chat_id: "-4545168563", // work
        text: `
üìÜ ${getDate()}
${type === "–ë–∞–∑–æ–≤—ã–π" ? "–ë–∞–∑–æ–≤—ã–π" : type === "–ü–æ–ª–Ω—ã–π" ? "–ü–æ–ª–Ω—ã–π" : "–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è"}
üë®‚Äçü¶∞–ò–º—è: ${user}
üíª–ú–µ—Å—Å–µ–Ω–¥–∂–µ—Ä: ${typeMessage}
üìû–¢–µ–ª–µ—Ñ–æ–Ω: ${phone}
${textArea}

`,
      };
      setLoading(true);
      await fetch(`https://api.telegram.org/bot${token}/sendMessage`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(obj),
      });

      setLoading(false);
      closeModal();
      navigate("/thanks");
    } catch (err) {
      console.error(err);
    }
  };

  const handlePoliticChange = (value: any) => {
    setIsPolitic(value.target.checked);
  };
  const handleAgeChange = (value: any) => {
    setIsAge(value.target.checked);
  };
  return (
    <ModalStyles
      isopen={isOpen ? "true" : "false"}
      onClick={() => closeModal()}
    >
      <ModalContentStyles onClick={(e) => e.stopPropagation()}>
        <CloseBtn onClick={() => closeModal()}>X</CloseBtn>
        {loading ? (
          <div style={{ paddingTop: 50 }}>–û—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞–ø—Ä–æ—Å ...</div>
        ) : isShowSuggestion ? (
          <div>
            <h2>–°–ø–∞—Å–∏–±–æ –∑–∞ –¥–æ–≤–µ—Ä–∏–µ!</h2>
            <p>–Ø —Å–∫–æ—Ä–æ —Å–≤—è–∂—É—Å—å —Å –≤–∞–º–∏ –∏ –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É—é</p>
          </div>
        ) : (
          <>
            <h2>–û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É</h2>
            <p>–∏ —è —Å–≤—è–∂—É—Å—å —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è</p>
            <form onSubmit={sendOrder}>
              <input
                placeholder="–í–∞—à–µ –∏–º—è"
                required
                value={user}
                onChange={(e) => setUser(e.target.value)}
              />
              <input
                placeholder="–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–Ω–∞—á–∏–Ω–∞—è —Å +)"
                required
                value={phone}
                onChange={(e) => setPhone(e.target.value)}
              />
              <input
                required
                placeholder="–ù–∏–∫ —Ç–µ–ª–µ–≥—Ä–∞–º (–Ω–∞—á–∏–Ω–∞—è —Å @)"
                value={typeMessage}
                onChange={(e) => setTypeMessage(e.target.value)}
              />
              <textarea
                style={{ marginBottom: 20 }}
                required
                placeholder="–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ... "
                value={textArea}
                onChange={(e) => setTextArea(e.target.value)}
              />
              <FieldSet>
                <label>
                  <input
                    required
                    type="checkbox"
                    checked={isPolitic}
                    onChange={handlePoliticChange}
                  />
                  <div>
                    –í—ã—Ä–∞–∂–∞—é{" "}
                    <a href="/approve.pdf" target="_blank">
                      —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –º–æ–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
                    </a>{" "}
                    –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å{" "}
                    <a href="/polity.pdf" target="_blank">
                      –ü–æ–ª–∏—Ç–∏–∫–æ–π –∑–∞—â–∏—Ç—ã –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.
                    </a>
                  </div>
                </label>
              </FieldSet>

              <FieldSet>
                <label>
                  <input
                    required
                    type="checkbox"
                    checked={isAge}
                    onChange={handleAgeChange}
                  />
                  <div>–ú–Ω–µ —É–∂–µ –µ—Å—Ç—å 18 –ª–µ—Ç.</div>
                </label>
              </FieldSet>
              <button type="submit">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
            </form>
          </>
        )}
      </ModalContentStyles>
    </ModalStyles>
  );
};

export default Modal;
